@model IEnumerable<CodeBustersWMU1.Models.Product>
@using CodeBustersWMU1.Models
@{
    ViewBag.Title = "Produkter";
}

@* css styling för att description div taggen inte ska bli för bred *@
<style type="text/css">
    #description {
        width: 300px;
        margin: auto;
    }
</style>



<h2>Produkter</h2>


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Image)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ArticleName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Remaining)
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @{  String path = "/Images/";
                    path = path + @Html.DisplayFor(modelItem => item.Image);
                }
                    <img src="@path" alt="bild" width="300" height="300" />

               
            </td>

            <td>

                <div id="description">

                    @Html.ActionLink(@item.ArticleName, "Details", "Details", new { id = @item.ArticleId }, null)

                    <br />
                    <br />
                    @{
                        String description = @item.Description;
                        description = description.Substring(0, 50);
                        description = String.Concat(description, "...");

                    }
                    <p>@description</p>
                </div>
            </td>
            <td>
                    @{
                        int price = item.Price;
                        string priceString = price.ToString("C");
                       <label>@priceString</label>
                    }
            </td>
            <td>
                @{
                    /* Different status message, depending on remaining quantity */
                    string message = "";
                    int remains = int.Parse(@Html.DisplayFor(modelItem => item.Remaining).ToString());
                    if (remains == 0)
                    {
                        message = "Slut i lager";
                    }
                    else if (remains <= 5)
                    {
                        message = "Bara " + remains + "st kvar";
                    }
                    else if (remains <= 10)
                    {
                        message = "Bara ett fåtal kvar";
                    }
                    else
                    {
                        message = "Finns i lager";
                    }
                }
                <p>@message</p>

            </td>

            <td>

                
                @if (int.Parse(@Html.DisplayFor(modelItem => item.Remaining).ToString()) > 0){
                    @Html.ActionLink("Lägg i Kundvagn", "AddToCart", "Product", new { id = @item.ArticleId }, null)
                    }
</td>
        </tr>
                    } @* For each loop, end *@




</table>
